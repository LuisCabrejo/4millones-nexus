cat > src/app/\(main\)/profile/page.tsx << 'EOF'
'use client'
import { useState, useEffect } from 'react'
import { authService, UserProfile } from '@/lib/supabase'

export default function ProfilePage() {
  const [userProfile, setUserProfile] = useState<UserProfile | null>(null)
  const [formData, setFormData] = useState({
    full_name: '',
    whatsapp: '',
    affiliate_link: ''
  })
  const [loading, setLoading] = useState(true)
  const [saving, setSaving] = useState(false)
  const [message, setMessage] = useState('')

  useEffect(() => {
    const loadProfile = async () => {
      try {
        const session = await authService.getSession()
        if (session?.user) {
          const profile = await authService.getUserProfile(session.user.id)
          setUserProfile(profile)

          if (profile) {
            setFormData({
              full_name: profile.full_name || '',
              whatsapp: profile.whatsapp || '',
              affiliate_link: profile.affiliate_link || ''
            })
          }
        }
      } catch (error) {
        console.error('Error loading profile:', error)
      } finally {
        setLoading(false)
      }
    }

    loadProfile()
  }, [])

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setSaving(true)
    setMessage('')

    try {
      if (userProfile) {
        await authService.updateUserProfile(userProfile.id, formData)
        setMessage('✅ Perfil actualizado correctamente')

        // Actualizar el estado local
        setUserProfile({
          ...userProfile,
          ...formData
        })
      }
    } catch (error) {
      console.error('Error updating profile:', error)
      setMessage('❌ Error al actualizar el perfil')
    } finally {
      setSaving(false)
    }
  }

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-64">
        <div className="text-white text-lg">Cargando perfil...</div>
      </div>
    )
  }

  return (
    <div className="max-w-2xl mx-auto space-y-8">
      <div className="text-center">
        <h1 className="text-4xl font-bold text-white mb-4">Mi Perfil</h1>
        <p className="text-blue-200 text-lg">
          Gestiona tu información personal
        </p>
      </div>

      <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-8 border border-white/20">
        <div className="mb-6">
          <h2 className="text-2xl font-semibold text-white mb-2">Información Personal</h2>
          <p className="text-blue-200">Actualiza tus datos de contacto</p>
        </div>

        {message && (
          <div className={`mb-6 p-4 rounded-lg ${
            message.includes('✅')
              ? 'bg-green-900/50 border border-green-500 text-green-200'
              : 'bg-red-900/50 border border-red-500 text-red-200'
          }`}>
            {message}
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          <div>
            <label className="block text-sm font-medium text-blue-200 mb-2">
              Correo Electrónico
            </label>
            <input
              type="email"
              value={userProfile?.correo_electronico || ''}
              disabled
              className="w-full px-4 py-3 bg-white/5 border border-white/20 rounded-lg text-white placeholder-blue-300 opacity-50 cursor-not-allowed"
            />
            <p className="text-xs text-blue-300 mt-1">El correo no se puede modificar</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-blue-200 mb-2">
              Nombre Completo
            </label>
            <input
              type="text"
              value={formData.full_name}
              onChange={(e) => setFormData({...formData, full_name: e.target.value})}
              className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-blue-300 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent"
              placeholder="Tu nombre completo"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-blue-200 mb-2">
              WhatsApp
            </label>
            <input
              type="tel"
              value={formData.whatsapp}
              onChange={(e) => setFormData({...formData, whatsapp: e.target.value})}
              className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-blue-300 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent"
              placeholder="Ej: +57 300 123 4567"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-blue-200 mb-2">
              Enlace de Afiliación
            </label>
            <input
              type="text"
              value={formData.affiliate_link}
              onChange={(e) => setFormData({...formData, affiliate_link: e.target.value})}
              className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-blue-300 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent"
              placeholder="Tu enlace personalizado"
            />
          </div>

          <button
            type="submit"
            disabled={saving}
            className="w-full bg-gradient-to-r from-yellow-400 to-orange-500 hover:from-yellow-500 hover:to-orange-600 text-white font-medium py-3 px-6 rounded-lg transition-all transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {saving ? 'Guardando...' : 'Actualizar Perfil'}
          </button>
        </form>
      </div>
    </div>
  )
}
EOF
